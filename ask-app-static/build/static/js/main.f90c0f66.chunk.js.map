{"version":3,"sources":["pages/Login.js","components/Nav.js","components/Answer.js","components/Question.js","components/User.js","pages/Home.js","pages/Register.js","pages/Profile.js","pages/Questions.js","pages/MyQA.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","reditect","setRedirect","message","setMessage","submit","e","a","preventDefault","fetch","method","headers","credentials","body","JSON","stringify","response","json","content","setName","name","window","location","reload","to","className","onSubmit","type","placeholder","required","onChange","target","value","Nav","menu","notificationNumber","setNotificationNumber","id","String","userId","logout","undefined","getNotificationNumber","onClick","class","style","backgroundColor","marginRight","Answer","answer","Question","renderedAnswer","renderedLike","setAnswer","likes","setLikes","questionId","qPosterId","aPosterId","aPosterName","submitAnswer","home","myanswers","answerName","width","myqa","question","opName","User","firstName","lastName","answers","Home","questions","setQuestions","topQuestions","setTopQuestions","users","setUsers","callCounter","setCallCounter","showingMore","setShowingMore","showBtn","setShowBtn","loadQuestions","loadTopQuestions","loadUsers","renderedQuestions","renderedTopQuestions","renderedUsers","slice","length","map","qPosterName","reverse","Register","setFirstName","setLastName","test","Profile","oldPassword","setOldPassword","newPassword","setNewPassword","newEmail","setNewEmail","passwordMessage","setPasswordMessage","submitPassword","submitFirstName","submitLastName","submitEmail","Questions","setQuestion","console","log","questionForm","submitQuestion","MyQA","setAnswers","renderedAnswers","loadAnswers","App","setId","useEffect","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA4DeA,EAzDD,SAACC,GACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAAM,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACbD,EAAEE,iBADW,SAEUC,MAAM,mCAAoC,CAC/DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAElB,QAAOE,eANnB,cAEPiB,EAFO,gBAQSA,EAASC,OARlB,OASW,aADlBC,EARO,QASDf,QACVC,EAAWc,EAAQf,UAEnBR,EAAMwB,QAAQD,EAAQE,MACtBlB,GAAY,GACZmB,OAAOC,SAASC,QAAO,IAdZ,2CAAH,sDAkBZ,OAAItB,EACK,cAAC,IAAD,CAAUuB,GAAG,MAIpB,sBAAMC,UAAU,cAAhB,SACE,uBAAMC,SAAUrB,EAAhB,UACE,oBAAIoB,UAAU,oBAAd,4BAEA,uBACEE,KAAK,QACLF,UAAU,eACVG,YAAY,mBACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAOR,EAASQ,EAAEyB,OAAOC,UAGrC,uBACEL,KAAK,WACLF,UAAU,eACVG,YAAY,WACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAON,EAAYM,EAAEyB,OAAOC,UAExC,qBAAKP,UAAU,gBAAf,SAAgCtB,IAEhC,wBAAQsB,UAAU,+BAA+BE,KAAK,SAAtD,2B,QC6DOM,EA9GH,SAACtC,GACX,IAyCIuC,EAzCJ,EAAoDtC,mBAAS,GAA7D,mBAAOuC,EAAP,KAA2BC,EAA3B,KACMC,EAAKC,OAAO3C,EAAM4C,QAClBC,EAAM,uCAAG,sBAAAjC,EAAA,sEACPE,MAAM,mCAAoC,CAC9CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,YAJF,OAMbjB,EAAMwB,QAAQ,IAND,2CAAH,qDAqFZ,YAjDWsB,IAAPJ,GAA2B,cAAPA,GA3BG,uCAAG,8BAAA9B,EAAA,sEACLE,MAAM,6CAA8C,CACzEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CAAEsB,OACvBzB,YAAa,YAPa,cACtBI,EADsB,gBASNA,EAASC,OATH,OAStBC,EATsB,OAU5BkB,EAAsBE,OAAOpB,IAVD,2CAAH,oDA4BzBwB,GAKAR,EADiB,KAAfvC,EAAMyB,WAA8BqB,IAAf9C,EAAMyB,KAE3B,qBAAIK,UAAU,kCAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,WAA5B,qBAIF,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,WAA/B,2BAQJ,qBAAIA,UAAU,kCAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,eAAC,IAAD,CAAMD,GAAG,QAAQC,UAAU,WAAWkB,QAtCnB,WACrBR,EAAqB,IACvB1B,MAAM,+CAAgD,CACpDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CAAEsB,OACvBzB,YAAa,YAGfwB,EAAsB,KA2BlB,UACE,sBACEQ,MAAM,uBACNC,MAAO,CAAEC,gBAAiB,SAAUC,YAAa,SAFnD,SAKGZ,IANL,cAWF,oBAAIV,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMD,GAAG,WAAWC,UAAU,WAA9B,uBAIF,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,WAAWkB,QAASH,EAAhD,yBASN,qBACEf,UAAU,2CACVoB,MAAO,CAAEC,gBAAiB,WAF5B,SAIE,sBAAKrB,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,eAAvB,kBAGA,oBAAIA,UAAU,kCAAd,SACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMD,GAAG,aAAaC,UAAU,WAAhC,2BAKJ,8BAAMS,UCrFCc,G,MAnBA,SAACrD,GACd,OACE,qBACE8B,UAAU,2DADZ,SAIE,qBAAKA,UAAU,6CAAf,SACE,gCACE,wBAAOA,UAAU,eAAjB,UAAiC9B,EAAMyB,KAAvC,QACA,wBAAOK,UAAU,mBAAjB,UACG9B,EAAMsD,OACP,mCCyJGC,EApKE,SAACvD,GAChB,IAEIwD,EACAC,EAHJ,EAA4BxD,mBAAS,IAArC,mBAAOqD,EAAP,KAAeI,EAAf,KACA,EAA0BzD,mBAASD,EAAM2D,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KAGMC,EAAalB,OAAO3C,EAAM0C,IAC1BoB,EAAYnB,OAAO3C,EAAM8D,WACzBC,EAAYpB,OAAO3C,EAAM+D,WACzBC,EAAcrB,OAAO3C,EAAMgE,aAC3BC,EAAY,uCAAG,sBAAArD,EAAA,sDACnBE,MAAM,wCAAyC,CAC7CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CACnByC,aACAC,YACAR,SACAS,YACAC,kBAVe,2CAAH,qDAwIlB,MA1FmB,KAAjBhE,EAAMsD,aACWR,IAAjB9C,EAAMsD,QACW,cAAjBtD,EAAMsD,SACS,IAAftD,EAAMkE,OACc,IAApBlE,EAAMmE,UAENX,EAAiB,cAAC,EAAD,CAAQF,OAAQtD,EAAMsD,OAAQ7B,KAAMzB,EAAMoE,cAE5C,IAAfpE,EAAMkE,OACc,IAApBlE,EAAMmE,gBACcrB,IAApB9C,EAAM+D,WACc,cAApB/D,EAAM+D,WACc,KAApB/D,EAAM+D,UAENP,EACE,uBAAMzB,SAAUkC,EAAhB,UACE,uBACEjC,KAAK,OACLF,UAAU,6BACVoB,MAAO,CAAEmB,MAAO,OAChBpC,YAAY,kBACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAO+C,EAAU/C,EAAEyB,OAAOC,UAEtC,wBAAQP,UAAU,wCAAwCE,KAAK,SAA/D,wBAKyB,IAApBhC,EAAMmE,YACfX,EACE,gCACE,cAAC,EAAD,CAAQF,OAAQtD,EAAMsD,OAAQ7B,KAAMzB,EAAMoE,aAC1C,uBAAMrC,SAAUkC,EAAcnC,UAAU,WAAxC,UACE,uBACEE,KAAK,OACLF,UAAU,6BACVoB,MAAO,CAAEmB,MAAO,OAChBpC,YAAY,qBACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAO+C,EAAU/C,EAAEyB,OAAOC,UAEtC,wBACEP,UAAU,wCACVoB,MAAO,CAAEmB,MAAO,OAChBrC,KAAK,SAHP,uBAQF,wBACEF,UAAU,+BACVoB,MAAO,CAAEmB,MAAO,OAChBrB,QArFa,WACnBlC,MAAM,0CAA2C,CAC/CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CACnByC,iBAGJnC,OAAOC,SAASC,QAAO,IAyEnB,yBAWW,IAAf5B,EAAMkE,OACS,IAAflE,EAAMsE,WACcxB,IAApB9C,EAAM+D,WACc,cAApB/D,EAAM+D,WACc,KAApB/D,EAAM+D,YAENN,EACE,gCACE,wBACE3B,UAAU,6CACVkB,QA5Fa,WACnBlC,MAAM,0CAA2C,CAC/CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEyC,iBAGzBD,EADiBD,EAAQ,IAmFrB,SAIE,4CAEF,wBACE7B,UAAU,4CACVkB,QAxFgB,WACtBlC,MAAM,6CAA8C,CAClDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEyC,iBAGzBD,EADiBD,EAAQ,IA+ErB,SAIE,gDAYN,qBACE7B,UAAU,kEACVoB,MAAOlD,EAAMkD,MAFf,SAIE,sBAAKpB,UAAU,6CAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAIA,UAAU,OAAd,gBAAyB9B,EAAMuE,YAC/B,wBAAOzC,UAAU,kBAAjB,wBAA+C9B,EAAMwE,UACpDhB,KAEH,wBAAO1B,UAAU,+CAAjB,UACG2B,EADH,WACyBE,WC5IlBc,EAjBF,SAACzE,GACZ,OACE,qBAAK8B,UAAU,gEAAf,SACE,sBAAKA,UAAU,6CAAf,UACE,8BACE,qBAAIA,UAAU,OAAd,UACG9B,EAAM0E,UADT,IACqB1E,EAAM2E,cAG7B,wBAAO7C,UAAU,sCAAjB,sBACY9B,EAAM4E,iBCyGXC,EAnHF,SAAC7E,GACZ,MAAkCC,mBAAS,IAA3C,mBAAO6E,EAAP,KAAkBC,EAAlB,KACA,EAAwC9E,mBAAS,IAAjD,mBAAO+E,EAAP,KAAqBC,EAArB,KACA,EAA0BhF,mBAAS,IAAnC,mBAAOiF,EAAP,KAAcC,EAAd,KACA,EAAsClF,mBAAS,GAA/C,mBAAOmF,EAAP,KAAoBC,EAApB,KACA,EAAsCpF,oBAAS,GAA/C,mBAAOqF,EAAP,KAAoBC,EAApB,KACA,EAA8BtF,mBAAS,aAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KACMC,EAAa,uCAAG,4BAAA9E,EAAA,sEACGE,MAAM,yCAA0C,CACrEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,YANK,cACdI,EADc,YAQpB0D,EARoB,SAQD1D,EAASC,OARR,6EAAH,qDAWbqE,EAAgB,uCAAG,4BAAA/E,EAAA,sEACAE,MAAM,4CAA6C,CACxEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,YANQ,cACjBI,EADiB,YAQvB4D,EARuB,SAQD5D,EAASC,OARR,6EAAH,qDAWhBsE,EAAS,uCAAG,4BAAAhF,EAAA,sEACOE,MAAM,qCAAsC,CACjEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,YANC,cACVI,EADU,YAQhB8D,EARgB,SAQD9D,EAASC,OARR,6EAAH,qDAWK,IAAhB8D,IACFM,IACAC,IACAC,IACAP,EAAe,IAEjB,IAIIQ,EACAC,EACAC,EA8CJ,OA5CEF,GADkB,IAAhBP,EACkBR,EACjBkB,MAAMlB,EAAUmB,OAAS,GAAInB,EAAUmB,QACvCC,KAAI,gBAAGxD,EAAH,EAAGA,GAAI6B,EAAP,EAAOA,SAAqB4B,GAA5B,EAAiBrC,UAAjB,EAA4BqC,aAAaxC,EAAzC,EAAyCA,MAAzC,OACH,cAAC,EAAD,CAEEY,SAAUA,EACVC,OAAQ2B,EACRxC,MAAOA,GAHFjB,MAMR0D,UAEiBtB,EACjBkB,MAAMlB,EAAUmB,OAAS,GAAInB,EAAUmB,QACvCC,KAAI,gBAAGxD,EAAH,EAAGA,GAAI6B,EAAP,EAAOA,SAAqB4B,GAA5B,EAAiBrC,UAAjB,EAA4BqC,aAAaxC,EAAzC,EAAyCA,MAAzC,OACH,cAAC,EAAD,CAEEY,SAAUA,EACVC,OAAQ2B,EACRxC,MAAOA,GAHFjB,MAMR0D,UAGLL,EAAgBb,EAAMgB,KAAI,gBAAGxD,EAAH,EAAGA,GAAIgC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,QAA5B,OACxB,cAAC,EAAD,CAEEF,UAAWA,EACXC,SAAUA,EACVC,QAASA,GAHJlC,MAOToD,EAAuBd,EAAakB,KAClC,gBAAGxD,EAAH,EAAGA,GAAI6B,EAAP,EAAOA,SAAqB4B,GAA5B,EAAiBrC,UAAjB,EAA4BqC,aAAaxC,EAAzC,EAAyCA,MAAzC,OACE,cAAC,EAAD,CAEEY,SAAUA,EACVC,OAAQ2B,EACRxC,MAAOA,GAHFjB,MAQT,sBAAKZ,UAAU,aAAf,UACE,kDACC+D,EACD,wBAAQ/D,UAAU,8BAA8BkB,QAxDnC,WACDyC,EAAdH,EAAyB,YAA0B,aACrCC,GAAdD,IAsDE,SACGE,IAEH,uBACA,yDACCO,EACD,uBACA,kDACCD,MC7BQO,EAjFE,WACf,MAAkCpG,mBAAS,IAA3C,mBAAOyE,EAAP,KAAkB4B,EAAlB,KACA,EAAgCrG,mBAAS,IAAzC,mBAAO0E,EAAP,KAAiB4B,EAAjB,KACA,EAA0BtG,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAWMC,EAAM,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACbD,EAAEE,kBACmC,KAVvB,2BACJ2F,KASetG,GARhB,GAEC,GAIG,gBAGXO,EAAW,iBAHA,4BAIFL,EAAS6F,OAAS,GAJhB,gBAKXxF,EAAW,4CALA,wCAOLK,MAAM,qCAAsC,CAChDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BE,KAAMC,KAAKC,UAAU,CAAEsD,YAAWC,WAAUzE,QAAOE,eAV1C,QAYXG,GAAY,GAZD,4CAAH,sDAeZ,OAAID,EACK,cAAC,IAAD,CAAUuB,GAAG,WAIpB,sBAAMC,UAAU,cAAhB,SACE,uBAAMC,SAAUrB,EAAhB,UACE,oBAAIoB,UAAU,oBAAd,6BAEA,uBACEE,KAAK,OACLF,UAAU,eACVG,YAAY,aACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAO2F,EAAa3F,EAAEyB,OAAOC,UAEzC,uBACEL,KAAK,OACLF,UAAU,eACVG,YAAY,YACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAO4F,EAAY5F,EAAEyB,OAAOC,UAGxC,uBACEL,KAAK,OACLF,UAAU,eACVG,YAAY,mBACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAOR,EAASQ,EAAEyB,OAAOC,UAGrC,uBACEL,KAAK,WACLF,UAAU,eACVG,YAAY,WACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAON,EAAYM,EAAEyB,OAAOC,UAExC,qBAAKP,UAAU,gBAAf,SAAgCtB,IAEhC,wBAAQsB,UAAU,+BAA+BE,KAAK,SAAtD,0BCmGOyE,EA9KC,SAACzG,GACf,MAAsCC,mBAAS,IAA/C,mBAAOyG,EAAP,KAAoBC,EAApB,KACA,EAAsC1G,mBAAS,IAA/C,mBAAO2G,EAAP,KAAoBC,EAApB,KACA,EAAkC5G,mBAAS,IAA3C,mBAAOyE,EAAP,KAAkB4B,EAAlB,KACA,EAAgCrG,mBAAS,IAAzC,mBAAO0E,EAAP,KAAiB4B,EAAjB,KACA,EAAgCtG,mBAAS,IAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAA8B9G,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA8CR,mBAAS,IAAvD,mBAAO+G,EAAP,KAAwBC,EAAxB,KACM/G,EAAQF,EAAME,MASdgH,EAAc,uCAAG,WAAOvG,GAAP,iBAAAC,EAAA,yDACrBD,EAAEE,mBACE+F,EAAYX,OAAS,GAFJ,uBAGnBxF,EAAW,4CAHQ,0CAMEK,MAAM,4CAA6C,CACxEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAElB,QAAOwG,cAAaE,kBAVxB,cAMfvF,EANe,gBAYCA,EAASC,OAZV,OAaG,aADlBC,EAZe,QAaTf,SACVyG,EAAmB1F,EAAQf,SAdR,4CAAH,sDAkBd2G,EAAe,uCAAG,WAAOxG,GAAP,iBAAAC,EAAA,yDACtBD,EAAEE,iBACuB,IAArB6D,EAAUuB,OAFQ,uBAGpBxF,EAAW,uBAHS,0CAMCK,MAAM,6CAA8C,CACzEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEsD,YAAWxE,YAVd,cAMhBmB,EANgB,gBAYAA,EAASC,OAZT,OAaE,aADlBC,EAZgB,QAaVf,SACVC,EAAWc,EAAQf,SAdC,4CAAH,sDAkBf4G,EAAc,uCAAG,WAAOzG,GAAP,iBAAAC,EAAA,yDACrBD,EAAEE,iBACsB,IAApB8D,EAASsB,OAFQ,uBAGnBxF,EAAW,uBAHQ,0CAMEK,MAAM,4CAA6C,CACxEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEuD,WAAUzE,YAVd,cAMfmB,EANe,gBAYCA,EAASC,OAZV,OAaG,aADlBC,EAZe,QAaTf,SACVC,EAAWc,EAAQf,SAdA,4CAAH,sDAkBd6G,EAAW,uCAAG,WAAO1G,GAAP,iBAAAC,EAAA,yDAClBD,EAAEE,kBACsC,KA/D1B,2BACJ2F,KA8DeM,GA7DhB,GAEC,GAyDQ,uBAGhBrG,EAAW,iBAHK,0CAMOK,MAAM,yCAA0C,CACrEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAElB,QAAO4G,eAVhB,cAMVzF,EANU,iBAYMA,EAASC,OAZf,QAaQ,aADlBC,EAZU,QAaJf,SACVC,EAAWc,EAAQf,SAdL,4CAAH,sDAmBjB,OACE,uBAAMsB,UAAU,cAAhB,UACE,sBAAKA,UAAU,eAAf,UACE,+BACG9B,EAAM0E,UADT,IACqB1E,EAAM2E,YAE3B,4BAAI3E,EAAME,WAEZ,uBACA,uBACA,iDACA,uBAAM6B,SAAUmF,EAAhB,UACE,uBACElF,KAAK,WACLF,UAAU,eACVG,YAAY,eACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAOgG,EAAehG,EAAEyB,OAAOC,UAE3C,uBACEL,KAAK,WACLF,UAAU,eACVG,YAAY,eACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAOkG,EAAelG,EAAEyB,OAAOC,UAG3C,wBAAQP,UAAU,+BAA+BE,KAAK,SAAtD,oBAGA,qBAAKF,UAAU,gBAAf,SAAgCkF,OAGlC,uBACA,uBACA,uBAEA,kDACA,uBAAMjF,SAAUoF,EAAhB,UACE,uBACEnF,KAAK,OACLF,UAAU,eACVG,YAAY,aACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAO2F,EAAa3F,EAAEyB,OAAOC,UAGzC,wBAAQP,UAAU,+BAA+BE,KAAK,SAAtD,kCAKF,uBACA,uBAAMD,SAAUqF,EAAhB,UACE,uBACEpF,KAAK,OACLF,UAAU,eACVG,YAAY,YACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAO4F,EAAY5F,EAAEyB,OAAOC,UAExC,wBAAQP,UAAU,+BAA+BE,KAAK,SAAtD,iCAIF,uBAEA,uBAAMD,SAAUsF,EAAhB,UACE,uBACErF,KAAK,OACLF,UAAU,eACVG,YAAY,QACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAOoG,EAAYpG,EAAEyB,OAAOC,UAExC,wBAAQP,UAAU,+BAA+BE,KAAK,SAAtD,0BAGA,qBAAKF,UAAU,gBAAf,SAAgCtB,WCzDzB8G,EA9GG,SAACtH,GACjB,IAAM0C,EAAKC,OAAO3C,EAAM4C,QAClBnB,EAAOzB,EAAMyB,KACnB,EAAgCxB,qBAAhC,mBAAOsE,EAAP,KAAiBgD,EAAjB,KACA,EAAkCtH,mBAAS,IAA3C,mBAAO6E,EAAP,KAAkBC,EAAlB,KACA,EAAsC9E,mBAAS,GAA/C,mBAAOmF,EAAP,KAAoBC,EAApB,KACA,EAA8BpF,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA+G,QAAQC,IAAIzH,EAAMyB,MAClB,IAsBIiG,EAiCA7B,EAvDE8B,EAAc,uCAAG,WAAOhH,GAAP,iBAAAC,EAAA,6DACrBD,EAAEE,iBADmB,SAEEC,MAAM,0CAA2C,CACtEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEmD,WAAU7B,KAAIjB,WANlB,cAEfJ,EAFe,gBAQCA,EAASC,OARV,OAQfC,EARe,OASrBd,EAAWc,EAAQf,SATE,2CAAH,sDAWdkF,EAAa,uCAAG,4BAAA9E,EAAA,sEACGE,MAAM,yCAA0C,CACrEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,YANK,cACdI,EADc,YAQpB0D,EARoB,SAQD1D,EAASC,OARR,6EAAH,qDAkFnB,OArEEoG,EADS,cAAPhF,EAEA,gCACE,uBAAMX,SAAU4F,EAAhB,UACE,uBACE3F,KAAK,OACLF,UAAU,wBACVoB,MAAO,CAAEmB,MAAO,OAChBpC,YAAY,iBACZC,UAAQ,EACRC,SAAU,SAACxB,GAAD,OAAO4G,EAAY5G,EAAEyB,OAAOC,UAExC,wBACEP,UAAU,4BACVE,KAAK,SACLkB,MAAO,CAAEmB,MAAO,OAHlB,oBAQF,qBAAKvC,UAAU,gBAAf,SAAgCtB,OAKlC,gCACE,2EACA,0BAMNqF,EAAoBf,EACjBoB,KACC,gBACExD,EADF,EACEA,GACA6B,EAFF,EAEEA,SACAT,EAHF,EAGEA,UACAqC,EAJF,EAIEA,YACAxC,EALF,EAKEA,MACAL,EANF,EAMEA,OAEAU,GARF,EAOED,UAPF,EAQEC,aARF,OAUE,8BACE,cAAC,EAAD,CAEEtB,GAAIA,EACJoB,UAAWA,EACXS,SAAUA,EACVC,OAAQ2B,EACRxC,MAAOA,EACPL,OAAQA,EACRY,MAAM,EACNI,MAAM,EAENP,UAAW/D,EAAM4C,OACjBoB,YAAahE,EAAMyB,KACnB2C,WAAYJ,GAZPtB,QAiBZ0D,UACiB,IAAhBhB,IACFM,IACAL,EAAe,IAIf,sBAAKvD,UAAU,aAAf,UACG4F,EACD,uBAFF,IAEU7B,EACR,2BCmDS+B,EA3JF,SAAC5H,GACZ,IAAM0C,EAAKC,OAAO3C,EAAM4C,QACxB,EAAkC3C,mBAAS,IAA3C,mBAAO6E,EAAP,KAAkBC,EAAlB,KACA,EAA8B9E,mBAAS,IAAvC,mBAAO2E,EAAP,KAAgBiD,EAAhB,KACA,EAAsC5H,mBAAS,GAA/C,mBAAOmF,EAAP,KAAoBC,EAApB,KACA,EAAsCpF,oBAAS,GAA/C,mBAAOqF,EAAP,KAAoBC,EAApB,KACA,EAA8BtF,mBAAS,aAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KACA+B,QAAQC,IAAIzH,EAAMyB,MAClB,IA8BIoE,EACAiC,EA/BEpC,EAAa,uCAAG,4BAAA9E,EAAA,sEACGE,MAAM,6CAA8C,CACzEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEsB,SAPL,cACdrB,EADc,YAUpB0D,EAVoB,SAUD1D,EAASC,OAVR,6EAAH,qDAabyG,EAAW,uCAAG,4BAAAnH,EAAA,sEACKE,MAAM,2CAA4C,CACvEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEsB,SAPP,cACZrB,EADY,YAUlBwG,EAVkB,SAUDxG,EAASC,OAVR,6EAAH,qDAwHjB,OApGEuE,GADkB,IAAhBP,EACkBR,EACjBkB,MAAMlB,EAAUmB,OAAS,GAAInB,EAAUmB,QACvCC,KACC,gBACExD,EADF,EACEA,GACA6B,EAFF,EAEEA,SAEA4B,GAJF,EAGErC,UAHF,EAIEqC,aACAxC,EALF,EAKEA,MACAL,EANF,EAMEA,OAEAU,GARF,EAOED,UAPF,EAQEC,aARF,OAUE,8BACE,cAAC,EAAD,CAEEtB,GAAIA,EACJ6B,SAAUA,EACVC,OAAQ2B,EACRxC,MAAOA,EACPL,OAAQA,EACRY,MAAM,EAENH,UAAW/D,EAAM4C,OACjBoB,YAAahE,EAAMyB,KACnB2C,WAAYJ,GAVPtB,QAeZ0D,UAEiBtB,EACjBoB,KACC,gBACExD,EADF,EACEA,GACA6B,EAFF,EAEEA,SAEA4B,GAJF,EAGErC,UAHF,EAIEqC,aACAxC,EALF,EAKEA,MACAL,EANF,EAMEA,OAEAU,GARF,EAOED,UAPF,EAQEC,aARF,OAUE,8BACE,cAAC,EAAD,CAEEtB,GAAIA,EACJ6B,SAAUA,EACVC,OAAQ2B,EACRxC,MAAOA,EACPL,OAAQA,EACRY,MAAM,EAENH,UAAW/D,EAAM4C,OACjBoB,YAAahE,EAAMyB,KACnB2C,WAAYJ,GAVPtB,QAeZ0D,UAEL0B,EAAkBlD,EACfsB,KACC,gBACExD,EADF,EACEA,GACA6B,EAFF,EAEEA,SAEA4B,GAJF,EAGErC,UAHF,EAIEqC,aACAxC,EALF,EAKEA,MACAL,EANF,EAMEA,OAEAU,GARF,EAOED,UAPF,EAQEC,aARF,OAUE,8BACE,cAAC,EAAD,CAEEtB,GAAIA,EACJ6B,SAAUA,EACVC,OAAQ2B,EACRxC,MAAOA,EACPL,OAAQA,EACRY,MAAM,EACNI,MAAM,EACNH,WAAW,EAEXJ,UAAW/D,EAAM4C,OACjBoB,YAAahE,EAAMyB,KACnB2C,WAAYJ,GAZPtB,QAiBZ0D,UACiB,IAAhBhB,IACFM,IACAqC,IACA1C,EAAe,IAGf,sBAAKvD,UAAU,aAAf,UACE,qDACA,uBAFF,IAEU+D,EACR,wBAAQ/D,UAAU,8BAA8BkB,QA/GnC,WACDyC,EAAdH,EAAyB,YAA0B,aACrCC,GAAdD,IA6GE,SACGE,IAEH,uBACA,4CACA,uBARF,IAQUsC,MCjFCE,MA7Df,WACE,MAAoB/H,qBAApB,mBAAOyC,EAAP,KAAWuF,EAAX,KACA,EAAwBhI,mBAAS,IAAjC,mBAAOwB,EAAP,KAAaD,EAAb,KACA,EAAgCvB,mBAAS,IAAzC,mBAAO0E,EAAP,KAAiB4B,EAAjB,KACA,EAA0BtG,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAjBA+H,qBAAU,WACR,sBAAC,8BAAAtH,EAAA,sEACwBE,MAAM,iCAAkC,CAC7DE,QAAS,CACP,eAAgB,oBAElBC,YAAa,YALhB,cACOI,EADP,gBAQuBA,EAASC,OARhC,OAQOC,EARP,OAUCC,EAAQD,EAAQmD,WAChB6B,EAAYhF,EAAQoD,UACpBxE,EAASoB,EAAQrB,OACjB+H,EAAM1G,EAAQmB,IAbf,2CAAD,MAiBA,qBAAKZ,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CACEL,KAAMA,EACND,QACEA,EAEFoB,OAAQF,IAGV,cAAC,IAAD,CACEyF,KAAK,IACLC,OAAK,EACLC,UAAW,kBAAM,cAAC,EAAD,CAAM5G,KAAMA,EAAMmB,OAAQF,OAE7C,cAAC,IAAD,CACEyF,KAAK,aACLE,UAAW,kBACT,cAAC,EAAD,CAAWzF,OAAQF,EAAIjB,KAAMA,EAAO,IAAMkD,OAG9C,cAAC,IAAD,CAAOwD,KAAK,SAASE,UAAW,kBAAM,cAAC,EAAD,CAAO7G,QAASA,OACtD,cAAC,IAAD,CAAO2G,KAAK,YAAYE,UAAWhC,IACnC,cAAC,IAAD,CACE8B,KAAK,QACLE,UAAW,kBAAM,cAAC,EAAD,CAAMzF,OAAQF,EAAIjB,KAAMA,EAAO,IAAMkD,OAExD,cAAC,IAAD,CACEwD,KAAK,WACLE,UAAW,kBACT,cAAC,EAAD,CAAS3D,UAAWjD,EAAMkD,SAAUA,EAAUzE,MAAOA,aCpDlDoI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f90c0f66.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [reditect, setRedirect] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\" http://localhost:8000/api/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    const content = await response.json();\r\n    if (content.message !== \"success\") {\r\n      setMessage(content.message);\r\n    } else {\r\n      props.setName(content.name);\r\n      setRedirect(true);\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  if (reditect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <main className=\"form-signin\">\r\n      <form onSubmit={submit}>\r\n        <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          placeholder=\"name@example.com\"\r\n          required\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"Password\"\r\n          required\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <div className=\"error-message\">{message}</div>\r\n\r\n        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\r\n          Sign in\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = (props) => {\r\n  const [notificationNumber, setNotificationNumber] = useState(0);\r\n  const id = String(props.userId);\r\n  const logout = async () => {\r\n    await fetch(\"http://localhost:8000/api/logout\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    });\r\n    props.setName(\"\");\r\n  };\r\n\r\n  const getNotificationNumber = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/getnotifications\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ id }),\r\n      credentials: \"include\",\r\n    });\r\n    const content = await response.json();\r\n    setNotificationNumber(String(content));\r\n  };\r\n\r\n  const resetNotifications = () => {\r\n    if (notificationNumber > 0) {\r\n      fetch(\"http://localhost:8000/api/resetnotifications\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id }),\r\n        credentials: \"include\",\r\n      });\r\n\r\n      setNotificationNumber(0);\r\n    }\r\n  };\r\n  if (id !== undefined && id !== \"undefined\") {\r\n    getNotificationNumber();\r\n  }\r\n  let menu;\r\n\r\n  if (props.name === \"\" || props.name === undefined) {\r\n    menu = (\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n        <li className=\"nav-item active\">\r\n          <Link to=\"/login\" className=\"nav-link\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item active\">\r\n          <Link to=\"/register\" className=\"nav-link\">\r\n            Register\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  } else {\r\n    menu = (\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n        <li className=\"nav-item active\">\r\n          <Link to=\"/myqa\" className=\"nav-link\" onClick={resetNotifications}>\r\n            <span\r\n              class=\"badge badge-pill x-5\"\r\n              style={{ backgroundColor: \"orange\", marginRight: \"0.5em\" }}\r\n              // ubaciti {notificationNumber} i u Navu ce biti funkcija koja ce ovo updateovati\r\n            >\r\n              {notificationNumber}\r\n            </span>\r\n            My Q&A\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item active\">\r\n          <Link to=\"/profile\" className=\"nav-link\">\r\n            Profile\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item active\">\r\n          <Link to=\"/login\" className=\"nav-link\" onClick={logout}>\r\n            Logout\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-md navbar-dark mb-4\"\r\n      style={{ backgroundColor: \"#00124d\" }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Home\r\n        </Link>\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/questions\" className=\"nav-link\">\r\n              Questions\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div>{menu}</div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./ListStyle.css\";\r\n\r\nconst Answer = (props) => {\r\n  return (\r\n    <div\r\n      className=\"list-group-item list-group-item-action d-flex gap-3 py-1\"\r\n      //style={{ width: \"80%\", marginLeft: \"10%\" }}\r\n    >\r\n      <div className=\"d-flex gap-2 w-100 justify-content-between\">\r\n        <div>\r\n          <small className=\"text-success\">{props.name}: </small>\r\n          <small className=\"mb-0 opacity-100\">\r\n            {props.answer}\r\n            <br />\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","import React, { useState } from \"react\";\r\nimport \"./ListStyle.css\";\r\nimport Answer from \"./Answer\";\r\nconst Question = (props) => {\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [likes, setLikes] = useState(props.likes);\r\n  let renderedAnswer;\r\n  let renderedLike;\r\n  const questionId = String(props.id);\r\n  const qPosterId = String(props.qPosterId);\r\n  const aPosterId = String(props.aPosterId);\r\n  const aPosterName = String(props.aPosterName);\r\n  const submitAnswer = async () => {\r\n    fetch(\" http://localhost:8000/api/postanswer\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        questionId,\r\n        qPosterId,\r\n        answer,\r\n        aPosterId,\r\n        aPosterName,\r\n      }),\r\n    });\r\n  };\r\n  const deleteAnswer = () => {\r\n    fetch(\" http://localhost:8000/api/deleteanswer\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        questionId,\r\n      }),\r\n    });\r\n    window.location.reload(false);\r\n  };\r\n  const likeQuestion = () => {\r\n    fetch(\" http://localhost:8000/api/likequestion\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ questionId }),\r\n    });\r\n    const newLikes = likes + 1;\r\n    setLikes(newLikes);\r\n  };\r\n  const dislikeQuestion = () => {\r\n    fetch(\" http://localhost:8000/api/dislikequestion\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ questionId }),\r\n    });\r\n    const newLikes = likes - 1;\r\n    setLikes(newLikes);\r\n  };\r\n  if (\r\n    props.answer !== \"\" &&\r\n    props.answer !== undefined &&\r\n    props.answer !== \"undefined\" &&\r\n    props.home === false &&\r\n    props.myanswers !== true\r\n  ) {\r\n    renderedAnswer = <Answer answer={props.answer} name={props.answerName} />;\r\n  } else if (\r\n    props.home === false &&\r\n    props.myanswers !== true &&\r\n    props.aPosterId !== undefined &&\r\n    props.aPosterId !== \"undefined\" &&\r\n    props.aPosterId !== \"\"\r\n  ) {\r\n    renderedAnswer = (\r\n      <form onSubmit={submitAnswer}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control py-1 d-inline\"\r\n          style={{ width: \"90%\" }}\r\n          placeholder=\"Post the answer\"\r\n          required\r\n          onChange={(e) => setAnswer(e.target.value)}\r\n        />\r\n        <button className=\"py-1 btn btn-outline-primary d-inline\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  } else if (props.myanswers === true) {\r\n    renderedAnswer = (\r\n      <div>\r\n        <Answer answer={props.answer} name={props.answerName} />\r\n        <form onSubmit={submitAnswer} className=\"d-inline\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control py-1 d-inline\"\r\n            style={{ width: \"80%\" }}\r\n            placeholder=\"Repost your answer\"\r\n            required\r\n            onChange={(e) => setAnswer(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"py-1 btn btn-outline-primary d-inline\"\r\n            style={{ width: \"10%\" }}\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <button\r\n          className=\"py-1 btn btn-danger d-inline\"\r\n          style={{ width: \"10%\" }}\r\n          onClick={deleteAnswer}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  if (\r\n    props.home === false &&\r\n    props.myqa === false &&\r\n    props.aPosterId !== undefined &&\r\n    props.aPosterId !== \"undefined\" &&\r\n    props.aPosterId !== \"\"\r\n  ) {\r\n    renderedLike = (\r\n      <div>\r\n        <button\r\n          className=\"w-20 py-1 btn btn-outline-success d-inline\"\r\n          onClick={likeQuestion}\r\n        >\r\n          <span>▲</span>\r\n        </button>\r\n        <button\r\n          className=\"w-20 py-1 btn btn-outline-danger d-inline\"\r\n          onClick={dislikeQuestion}\r\n        >\r\n          <span>▼</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  // ELSE form za odgovor\r\n  // else if props.home===false i onda render formu\r\n\r\n  // Nece biti answer buttona u Questions, nego ce se answer forma renderati ovdje, a svi argumenti ce se proslijediti kroz props\r\n  // Funkcija za odgovor ce biti ovdje\r\n  // dodati if (props.home===false) -> renderati answer i like, ako je true onda ne renderati\r\n  return (\r\n    <div\r\n      className=\"list-group-item list-group-item-action d-inline-flex gap-3 py-3\"\r\n      style={props.style}\r\n    >\r\n      <div className=\"d-flex gap-2 w-100 justify-content-between\">\r\n        <div className=\"w-100\">\r\n          <h6 className=\"mb-0\">Q: {props.question}</h6>\r\n          <small className=\"mb-0 opacity-75\">Posted by: {props.opName}</small>\r\n          {renderedAnswer}\r\n        </div>\r\n        <small className=\"d-inline opacity-70 text-nowrap text-success\">\r\n          {renderedLike} Likes: {likes}\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport \"./ListStyle.css\";\r\n\r\nconst User = (props) => {\r\n  return (\r\n    <div className=\"list-group-item list-group-item-action d-flex gap-3 py-3 w-50\">\r\n      <div className=\"d-flex gap-2 w-100 justify-content-between\">\r\n        <div>\r\n          <h6 className=\"mb-0\">\r\n            {props.firstName} {props.lastName}\r\n          </h6>\r\n        </div>\r\n        <small className=\"opacity-70 text-nowrap text-success\">\r\n          Answers: {props.answers}\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport Question from \"../components/Question\";\r\nimport User from \"../components/User\";\r\nconst Home = (props) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [topQuestions, setTopQuestions] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [callCounter, setCallCounter] = useState(0);\r\n  const [showingMore, setShowingMore] = useState(false);\r\n  const [showBtn, setShowBtn] = useState(\"Show more\");\r\n  const loadQuestions = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/getquestions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n    setQuestions(await response.json());\r\n  };\r\n\r\n  const loadTopQuestions = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/gettopquestions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n    setTopQuestions(await response.json());\r\n  };\r\n\r\n  const loadUsers = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/getusers\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n    setUsers(await response.json());\r\n  };\r\n\r\n  if (callCounter === 0) {\r\n    loadQuestions();\r\n    loadTopQuestions();\r\n    loadUsers();\r\n    setCallCounter(1);\r\n  }\r\n  const showMore = () => {\r\n    showingMore ? setShowBtn(\"Show more\") : setShowBtn(\"Show less\");\r\n    showingMore ? setShowingMore(false) : setShowingMore(true);\r\n  };\r\n  let renderedQuestions;\r\n  let renderedTopQuestions;\r\n  let renderedUsers;\r\n  if (showingMore === false) {\r\n    renderedQuestions = questions\r\n      .slice(questions.length - 20, questions.length)\r\n      .map(({ id, question, qPosterId, qPosterName, likes }) => (\r\n        <Question\r\n          key={id}\r\n          question={question}\r\n          opName={qPosterName}\r\n          likes={likes}\r\n        />\r\n      ))\r\n      .reverse();\r\n  } else {\r\n    renderedQuestions = questions\r\n      .slice(questions.length - 30, questions.length)\r\n      .map(({ id, question, qPosterId, qPosterName, likes }) => (\r\n        <Question\r\n          key={id}\r\n          question={question}\r\n          opName={qPosterName}\r\n          likes={likes}\r\n        />\r\n      ))\r\n      .reverse();\r\n  }\r\n\r\n  renderedUsers = users.map(({ id, firstName, lastName, answers }) => (\r\n    <User\r\n      key={id}\r\n      firstName={firstName}\r\n      lastName={lastName}\r\n      answers={answers}\r\n    />\r\n  ));\r\n\r\n  renderedTopQuestions = topQuestions.map(\r\n    ({ id, question, qPosterId, qPosterName, likes }) => (\r\n      <Question\r\n        key={id}\r\n        question={question}\r\n        opName={qPosterName}\r\n        likes={likes}\r\n      />\r\n    )\r\n  );\r\n  return (\r\n    <div className=\"list-group\">\r\n      <h4>Latest Questions</h4>\r\n      {renderedQuestions}\r\n      <button className=\"w-20 btn btn-sm btn-primary\" onClick={showMore}>\r\n        {showBtn}\r\n      </button>\r\n      <br />\r\n      <h4>Users with most answers</h4>\r\n      {renderedUsers}\r\n      <br />\r\n      <h4>Top 10 Questions</h4>\r\n      {renderedTopQuestions}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Register = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [reditect, setRedirect] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const validateEmailAddress = (input) => {\r\n    const regex = /[^\\s@]+@[^\\s@]+\\.[^\\s@]+/;\r\n    if (regex.test(input)) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateEmailAddress(email) === -1) {\r\n      setMessage(\"Invalid email\");\r\n    } else if (password.length < 5) {\r\n      setMessage(\"Password must have at least 5 characters\");\r\n    } else {\r\n      await fetch(\"http://localhost:8000/api/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ firstName, lastName, email, password }),\r\n      });\r\n      setRedirect(true);\r\n    }\r\n  };\r\n  if (reditect) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <main className=\"form-signin\">\r\n      <form onSubmit={submit}>\r\n        <h1 className=\"h3 mb-3 fw-normal\">Please register</h1>\r\n\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"First Name\"\r\n          required\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Last Name\"\r\n          required\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"name@example.com\"\r\n          required\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"Password\"\r\n          required\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <div className=\"error-message\">{message}</div>\r\n\r\n        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nconst Profile = (props) => {\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [passwordMessage, setPasswordMessage] = useState(\"\");\r\n  const email = props.email;\r\n  const validateEmailAddress = (input) => {\r\n    const regex = /[^\\s@]+@[^\\s@]+\\.[^\\s@]+/;\r\n    if (regex.test(input)) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  };\r\n  const submitPassword = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword.length < 5) {\r\n      setMessage(\"Password must have at least 5 characters\");\r\n      return;\r\n    }\r\n    const response = await fetch(\" http://localhost:8000/api/changepassword\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ email, oldPassword, newPassword }),\r\n    });\r\n    const content = await response.json();\r\n    if (content.message !== \"success\") {\r\n      setPasswordMessage(content.message);\r\n    }\r\n  };\r\n\r\n  const submitFirstName = async (e) => {\r\n    e.preventDefault();\r\n    if (firstName.length === 0) {\r\n      setMessage(\"Please enter a name\");\r\n      return;\r\n    }\r\n    const response = await fetch(\" http://localhost:8000/api/changefirstname\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ firstName, email }),\r\n    });\r\n    const content = await response.json();\r\n    if (content.message !== \"success\") {\r\n      setMessage(content.message);\r\n    }\r\n  };\r\n\r\n  const submitLastName = async (e) => {\r\n    e.preventDefault();\r\n    if (lastName.length === 0) {\r\n      setMessage(\"Please enter a name\");\r\n      return;\r\n    }\r\n    const response = await fetch(\" http://localhost:8000/api/changelastname\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ lastName, email }),\r\n    });\r\n    const content = await response.json();\r\n    if (content.message !== \"success\") {\r\n      setMessage(content.message);\r\n    }\r\n  };\r\n\r\n  const submitEmail = async (e) => {\r\n    e.preventDefault();\r\n    if (validateEmailAddress(newEmail) === -1) {\r\n      setMessage(\"Invalid email\");\r\n      return;\r\n    } else {\r\n      const response = await fetch(\" http://localhost:8000/api/changeemail\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ email, newEmail }),\r\n      });\r\n      const content = await response.json();\r\n      if (content.message !== \"success\") {\r\n        setMessage(content.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"form-signin\">\r\n      <div className=\"profile-info\">\r\n        <h3>\r\n          {props.firstName} {props.lastName}\r\n        </h3>\r\n        <p>{props.email}</p>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <h5>Change Password</h5>\r\n      <form onSubmit={submitPassword}>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"Old password\"\r\n          required\r\n          onChange={(e) => setOldPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"New password\"\r\n          required\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n\r\n        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n        <div className=\"error-message\">{passwordMessage}</div>\r\n      </form>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <h5>Change User Info</h5>\r\n      <form onSubmit={submitFirstName}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"First Name\"\r\n          required\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n\r\n        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\r\n          Change First Name\r\n        </button>\r\n      </form>\r\n\r\n      <br />\r\n      <form onSubmit={submitLastName}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Last Name\"\r\n          required\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\r\n          Change Last Name\r\n        </button>\r\n      </form>\r\n      <br />\r\n\r\n      <form onSubmit={submitEmail}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Email\"\r\n          required\r\n          onChange={(e) => setNewEmail(e.target.value)}\r\n        />\r\n        <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\r\n          Change Email\r\n        </button>\r\n        <div className=\"error-message\">{message}</div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport Question from \"../components/Question\";\r\nconst Questions = (props) => {\r\n  const id = String(props.userId);\r\n  const name = props.name;\r\n  const [question, setQuestion] = useState();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [callCounter, setCallCounter] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n  console.log(props.name);\r\n  const submitQuestion = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\" http://localhost:8000/api/postquestion\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ question, id, name }),\r\n    });\r\n    const content = await response.json();\r\n    setMessage(content.message);\r\n  };\r\n  const loadQuestions = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/getquestions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n    setQuestions(await response.json());\r\n  };\r\n\r\n  let questionForm;\r\n  if (id !== \"undefined\") {\r\n    questionForm = (\r\n      <div>\r\n        <form onSubmit={submitQuestion}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control d-inline\"\r\n            style={{ width: \"90%\" }}\r\n            placeholder=\"Ask a question\"\r\n            required\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"d-inline btn  btn-primary\"\r\n            type=\"submit\"\r\n            style={{ width: \"10%\" }}\r\n          >\r\n            Ask\r\n          </button>\r\n        </form>\r\n        <div className=\"alert-success\">{message}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    questionForm = (\r\n      <div>\r\n        <h5>Please Log in to ask or answer questions.</h5>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let renderedQuestions;\r\n  renderedQuestions = questions\r\n    .map(\r\n      ({\r\n        id,\r\n        question,\r\n        qPosterId,\r\n        qPosterName,\r\n        likes,\r\n        answer,\r\n        aPosterId,\r\n        aPosterName,\r\n      }) => (\r\n        <div>\r\n          <Question\r\n            key={id}\r\n            id={id}\r\n            qPosterId={qPosterId}\r\n            question={question}\r\n            opName={qPosterName}\r\n            likes={likes}\r\n            answer={answer}\r\n            home={false}\r\n            myqa={false}\r\n            // Info za answer formu\r\n            aPosterId={props.userId}\r\n            aPosterName={props.name}\r\n            answerName={aPosterName}\r\n          />\r\n        </div>\r\n      )\r\n    )\r\n    .reverse();\r\n  if (callCounter === 0) {\r\n    loadQuestions();\r\n    setCallCounter(1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      {questionForm}\r\n      <br /> {renderedQuestions}\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import React, { useState } from \"react\";\r\nimport Question from \"../components/Question\";\r\n\r\nconst MyQA = (props) => {\r\n  const id = String(props.userId);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [callCounter, setCallCounter] = useState(0);\r\n  const [showingMore, setShowingMore] = useState(false);\r\n  const [showBtn, setShowBtn] = useState(\"Show more\");\r\n  console.log(props.name);\r\n  const loadQuestions = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/getuserquestions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ id }),\r\n    });\r\n    //const content = await response.json();\r\n    setQuestions(await response.json());\r\n    //console.log(content);\r\n  };\r\n  const loadAnswers = async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/getuseranswers\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ id }),\r\n    });\r\n    //const content = await response.json();\r\n    setAnswers(await response.json());\r\n    //console.log(content);\r\n  };\r\n  const showMore = () => {\r\n    showingMore ? setShowBtn(\"Show more\") : setShowBtn(\"Show less\");\r\n    showingMore ? setShowingMore(false) : setShowingMore(true);\r\n  };\r\n  let renderedQuestions;\r\n  let renderedAnswers;\r\n  if (showingMore === false) {\r\n    renderedQuestions = questions\r\n      .slice(questions.length - 20, questions.length)\r\n      .map(\r\n        ({\r\n          id,\r\n          question,\r\n          qPosterId,\r\n          qPosterName,\r\n          likes,\r\n          answer,\r\n          aPosterId,\r\n          aPosterName,\r\n        }) => (\r\n          <div /*onClick={() => loadAnswersById(String(id))}*/>\r\n            <Question\r\n              key={id}\r\n              id={id}\r\n              question={question}\r\n              opName={qPosterName}\r\n              likes={likes}\r\n              answer={answer}\r\n              home={false}\r\n              // Info za answer formu\r\n              aPosterId={props.userId}\r\n              aPosterName={props.name}\r\n              answerName={aPosterName}\r\n            />\r\n          </div>\r\n        )\r\n      )\r\n      .reverse();\r\n  } else {\r\n    renderedQuestions = questions\r\n      .map(\r\n        ({\r\n          id,\r\n          question,\r\n          qPosterId,\r\n          qPosterName,\r\n          likes,\r\n          answer,\r\n          aPosterId,\r\n          aPosterName,\r\n        }) => (\r\n          <div /*onClick={() => loadAnswersById(String(id))}*/>\r\n            <Question\r\n              key={id}\r\n              id={id}\r\n              question={question}\r\n              opName={qPosterName}\r\n              likes={likes}\r\n              answer={answer}\r\n              home={false}\r\n              // Info za answer formu\r\n              aPosterId={props.userId}\r\n              aPosterName={props.name}\r\n              answerName={aPosterName}\r\n            />\r\n          </div>\r\n        )\r\n      )\r\n      .reverse();\r\n  }\r\n  renderedAnswers = answers\r\n    .map(\r\n      ({\r\n        id,\r\n        question,\r\n        qPosterId,\r\n        qPosterName,\r\n        likes,\r\n        answer,\r\n        aPosterId,\r\n        aPosterName,\r\n      }) => (\r\n        <div /*onClick={() => loadAnswersById(String(id))}*/>\r\n          <Question\r\n            key={id}\r\n            id={id}\r\n            question={question}\r\n            opName={qPosterName}\r\n            likes={likes}\r\n            answer={answer}\r\n            home={false}\r\n            myqa={true}\r\n            myanswers={true}\r\n            // Info za answer formu\r\n            aPosterId={props.userId}\r\n            aPosterName={props.name}\r\n            answerName={aPosterName}\r\n          />\r\n        </div>\r\n      )\r\n    )\r\n    .reverse();\r\n  if (callCounter === 0) {\r\n    loadQuestions();\r\n    loadAnswers();\r\n    setCallCounter(1);\r\n  }\r\n  return (\r\n    <div className=\"list-group\">\r\n      <h4>My Latest Questions</h4>\r\n      <hr /> {renderedQuestions}\r\n      <button className=\"w-20 btn btn-sm btn-primary\" onClick={showMore}>\r\n        {showBtn}\r\n      </button>\r\n      <br />\r\n      <h4>My Answers</h4>\r\n      <hr /> {renderedAnswers}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyQA;\r\n","import \"./App.css\";\nimport Login from \"./pages/Login\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register\";\nimport Profile from \"./pages/Profile\";\nimport Questions from \"./pages/Questions\";\nimport MyQA from \"./pages/MyQA\";\nimport { BrowserRouter, HashRouter, Route } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [id, setId] = useState();\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"http://localhost:8000/api/user\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n      });\n\n      const content = await response.json();\n\n      setName(content.firstName);\n      setLastName(content.lastName);\n      setEmail(content.email);\n      setId(content.id);\n    })();\n  });\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Nav\n          name={name}\n          setName={\n            setName\n          } /* ovdje ubaciti id prop sa kojim cemo pretraziti user notifications*/\n          userId={id}\n        />\n\n        <Route\n          path=\"/\"\n          exact\n          component={() => <Home name={name} userId={id} />}\n        />\n        <Route\n          path=\"/questions\"\n          component={() => (\n            <Questions userId={id} name={name + \" \" + lastName} />\n          )}\n        />\n        <Route path=\"/login\" component={() => <Login setName={setName} />} />\n        <Route path=\"/register\" component={Register} />\n        <Route\n          path=\"/myqa\"\n          component={() => <MyQA userId={id} name={name + \" \" + lastName} />}\n        />\n        <Route\n          path=\"/profile\"\n          component={() => (\n            <Profile firstName={name} lastName={lastName} email={email} />\n          )}\n        />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n// Poslije <Nav> i prije </BrowserROuter>: <main className=\"form-signin\"> i </main>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}